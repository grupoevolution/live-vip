generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String?
  isPremium   Boolean  @default(false)
  premiumUntil DateTime?
  kirvanoId   String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relação com pagamentos
  payments    Payment[]
  
  @@map("users")
}

model LiveStream {
  id             String   @id @default(cuid())
  title          String
  thumbnail      String
  videoUrl       String?
  viewerCount    Int      @default(0)
  isLive         Boolean  @default(true)
  streamerName   String
  streamerAvatar String
  category       String
  isVipOnly      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  @@map("live_streams")
}

model Payment {
  id            String   @id @default(cuid())
  userId        String
  kirvanoOrderId String  @unique
  planType      String   // 'weekly', 'monthly', 'yearly'
  amount        Float
  status        String   // 'pending', 'completed', 'failed'
  validUntil    DateTime
  webhookData   Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("payments")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("admin_users")
}
